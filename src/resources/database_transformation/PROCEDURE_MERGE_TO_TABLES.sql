create or replace PROCEDURE insert_project_stat_proc
(objects_array IN NUMBER_ARRAY)
IS
  sql_project_task_stat VARCHAR2(5000);
BEGIN
   sql_project_task_stat := 'MERGE INTO PROJECT_USER_TASK_STAT stat_table_1
USING (
        SELECT
          PROJECT_ID.OBJECT_ID    AS PROJECT_ID,
          USER_ID.OBJECT_ID       AS USER_ID,
          TASK_ID.OBJECT_ID       AS TASK_ID,
          TASK_PRIORITY_REF.VALUE AS TASK_PRIORITY,
          TASK_STATUS_VALUE_REF.VALUE AS TASK_STATUS,
          START_DATE.DATE_VALUE        AS START_DATE
        FROM OBJECTS PROJECT_ID, OBJECTS USER_ID, OBJECTS TASK_ID,
          ATTRIBUTES TASK_PRIORITY, ATTRIBUTES TASK_STATUS_VALUE,
          ATTRIBUTES START_DATE,
          OBJREFERENCE PROJECT_TASK_REF, OBJREFERENCE USER_TASK_REF,
          LISTVALUE TASK_PRIORITY_REF, LISTVALUE TASK_STATUS_VALUE_REF
        WHERE
              TASK_ID.OBJECT_ID = :1 AND
              PROJECT_TASK_REF.ATTR_ID = 32 AND
              PROJECT_TASK_REF.REFERENCE = PROJECT_ID.OBJECT_ID AND
              PROJECT_TASK_REF.OBJECT_ID = TASK_ID.OBJECT_ID AND
              USER_TASK_REF.ATTR_ID = 31 AND
              USER_TASK_REF.OBJECT_ID = TASK_ID.OBJECT_ID AND
              USER_ID.OBJECT_ID = USER_TASK_REF.REFERENCE AND
              TASK_PRIORITY.OBJECT_ID = TASK_ID.OBJECT_ID AND
              START_DATE.ATTR_ID = 22 AND
              START_DATE.OBJECT_ID = TASK_ID.OBJECT_ID AND
              TASK_STATUS_VALUE.ATTR_ID = 26 AND
              TASK_STATUS_VALUE.OBJECT_ID = TASK_ID.OBJECT_ID AND
              TASK_STATUS_VALUE_REF.ATTR_ID = TASK_STATUS_VALUE.ATTR_ID AND
              TASK_STATUS_VALUE_REF.LIST_VALUE_ID = TASK_STATUS_VALUE.LIST_VALUE_ID AND
              TASK_PRIORITY.ATTR_ID = 25 AND
              TASK_PRIORITY_REF.ATTR_ID = TASK_PRIORITY.ATTR_ID AND
              TASK_PRIORITY_REF.LIST_VALUE_ID = TASK_PRIORITY.LIST_VALUE_ID
      ) stat_table_2
ON (stat_table_1.PROJECT_ID = stat_table_2.PROJECT_ID AND
    stat_table_1.USER_ID = stat_table_2.USER_ID AND
    stat_table_1.TASK_ID = stat_table_2.TASK_ID
)
WHEN MATCHED THEN UPDATE SET
  stat_table_1.TASK_PRIORITY = stat_table_2.TASK_PRIORITY,
  stat_table_1.TASK_STATUS = stat_table_2.TASK_STATUS,
  stat_table_1.START_DATE = stat_table_2.START_DATE
WHEN NOT MATCHED THEN INSERT VALUES
  (stat_table_2.PROJECT_ID, stat_table_2.USER_ID, stat_table_2.TASK_ID,
   stat_table_2.TASK_PRIORITY, stat_table_2.TASK_STATUS, stat_table_2.START_DATE)';

  FORALL i IN objects_array.FIRST..objects_array.LAST
  EXECUTE IMMEDIATE sql_project_task_stat USING objects_array(i);

END;


--DECLARE
--objects_array NUMBER_ARRAY;
--BEGIN
--  SELECT OBJECT_ID
--  BULK COLLECT INTO objects_array
--  FROM OBJECTS
--  WHERE OBJECT_TYPE_ID = 3;
--
--  insert_project_stat_proc(objects_array);
--END;

--------------------------------------------------------

create or replace PROCEDURE insert_working_day_stat_proc
(objects_array IN NUMBER_ARRAY)
IS
  sql_working_hours_stat VARCHAR2(5000);
BEGIN
   sql_working_hours_stat := 'MERGE INTO USER_WORKING_HOURS_STAT stat_table_1
USING (
        SELECT
          WORKING_DAY_ID.OBJECT_ID AS WORKING_DAY_ID,
          USER_ID.OBJECT_ID      AS USER_ID,
          WEEK_NUMBER.VALUE      AS WEEK_NUMBER,
          WORKING_DAY_DATE.DATE_VALUE AS WORKING_DAY_DATE,
          HOURS_COUNT.VALUE      AS HOURS_COUNT,
          WORKING_DAY_STATUS_REF.VALUE AS WORKING_DAY_STATUS
        FROM OBJECTS USER_ID, OBJECTS WORKING_DAY_ID,
          ATTRIBUTES WEEK_NUMBER, ATTRIBUTES WORKING_DAY_DATE,
          ATTRIBUTES HOURS_COUNT, ATTRIBUTES WORKING_DAY_STATUS,
          OBJREFERENCE USER_WORKING_DAY_REF,
          LISTVALUE WORKING_DAY_STATUS_REF
        WHERE WORKING_DAY_ID.OBJECT_ID = :1 AND
              USER_WORKING_DAY_REF.ATTR_ID = 53 AND
              USER_WORKING_DAY_REF.REFERENCE = USER_ID.OBJECT_ID AND
              USER_WORKING_DAY_REF.OBJECT_ID = WORKING_DAY_ID.OBJECT_ID AND
              WEEK_NUMBER.ATTR_ID = 50 AND
              WEEK_NUMBER.OBJECT_ID = WORKING_DAY_ID.OBJECT_ID AND
              WORKING_DAY_DATE.ATTR_ID = 49 AND
              WORKING_DAY_DATE.OBJECT_ID = WORKING_DAY_ID.OBJECT_ID AND
              HOURS_COUNT.ATTR_ID = 51 AND
              HOURS_COUNT.OBJECT_ID = WORKING_DAY_ID.OBJECT_ID AND
              WORKING_DAY_STATUS.ATTR_ID = 52 AND
              WORKING_DAY_STATUS.LIST_VALUE_ID = WORKING_DAY_STATUS_REF.LIST_VALUE_ID AND
              WORKING_DAY_STATUS_REF.ATTR_ID = WORKING_DAY_STATUS.ATTR_ID AND
              WORKING_DAY_STATUS.OBJECT_ID = WORKING_DAY_ID.OBJECT_ID
      ) stat_table_2
ON (stat_table_1.WORKING_DAY_ID = stat_table_2.WORKING_DAY_ID AND
    stat_table_1.USER_ID = stat_table_2.USER_ID AND
    stat_table_1.WEEK_NUMBER = stat_table_2.WEEK_NUMBER AND
    stat_table_1.WORKING_DAY_DATE = stat_table_2.WORKING_DAY_DATE
)
WHEN MATCHED THEN UPDATE SET
  stat_table_1.HOURS_COUNT = stat_table_2.HOURS_COUNT,
  stat_table_1.WORKING_DAY_STATUS = stat_table_2.WORKING_DAY_STATUS
WHEN NOT MATCHED THEN INSERT VALUES
  (stat_table_2.WORKING_DAY_ID, stat_table_2.USER_ID, stat_table_2.WEEK_NUMBER,
   stat_table_2.WORKING_DAY_DATE, stat_table_2.HOURS_COUNT, stat_table_2.WORKING_DAY_STATUS)';

    FORALL i IN objects_array.FIRST..objects_array.LAST
    EXECUTE IMMEDIATE sql_working_hours_stat USING objects_array(i);

END;


--DECLARE
--	objects_array NUMBER_ARRAY;
--BEGIN
--  SELECT OBJECT_ID
--  BULK COLLECT INTO objects_array
--  FROM OBJECTS
--  WHERE OBJECT_TYPE_ID = 6;
--
--  insert_working_day_stat_proc(objects_array);
--END;

--------------------------------------------------------

create or replace PROCEDURE insert_work_period_stat_proc
(objects_array IN NUMBER_ARRAY)
IS
  sql_work_period_stat VARCHAR2(5000);
BEGIN

  sql_work_period_stat := 'MERGE INTO WORK_PERIOD_STAT stat_table_1
USING (
    SELECT
    WORK_PERIOD_ID.OBJECT_ID AS WORK_PERIOD_ID,
    USER_ID.OBJECT_ID AS USER_ID,
    PROJECT_ID.OBJECT_ID AS PROJECT_ID,
    START_DATE.DATE_VALUE AS START_DATE,
    END_DATE.DATE_VALUE AS END_DATE,
    STATUS_LIST_VALUE.VALUE AS STATUS
  FROM OBJECTS WORK_PERIOD_ID, OBJECTS USER_ID, OBJECTS PROJECT_ID,
    ATTRIBUTES START_DATE, ATTRIBUTES END_DATE, ATTRIBUTES STATUS,
    OBJREFERENCE WP_USER_REF, OBJREFERENCE WP_PROJECT_REF,
    LISTVALUE STATUS_LIST_VALUE
  WHERE WORK_PERIOD_ID.OBJECT_ID = :1 AND
    WP_USER_REF.ATTR_ID = 64 AND
    WP_USER_REF.OBJECT_ID = WORK_PERIOD_ID.OBJECT_ID AND
    WP_USER_REF.REFERENCE = USER_ID.OBJECT_ID AND
    WP_PROJECT_REF.ATTR_ID = 65 AND
    WP_PROJECT_REF.OBJECT_ID =  WORK_PERIOD_ID.OBJECT_ID AND
    WP_PROJECT_REF.REFERENCE = PROJECT_ID.OBJECT_ID AND
    START_DATE.ATTR_ID = 61 AND
    START_DATE.OBJECT_ID = WORK_PERIOD_ID.OBJECT_ID AND
    END_DATE.ATTR_ID = 62 AND
    END_DATE.OBJECT_ID = WORK_PERIOD_ID.OBJECT_ID AND
    STATUS.ATTR_ID = 63 AND
    STATUS.OBJECT_ID = WORK_PERIOD_ID.OBJECT_ID AND
    STATUS.LIST_VALUE_ID = STATUS_LIST_VALUE.LIST_VALUE_ID AND
    STATUS_LIST_VALUE.ATTR_ID = STATUS.ATTR_ID) stat_table_2
    ON (stat_table_1.WORK_PERIOD_ID = stat_table_2.WORK_PERIOD_ID AND
      stat_table_1.USER_ID = stat_table_2.USER_ID AND
      stat_table_1.PROJECT_ID = stat_table_2.PROJECT_ID)
    WHEN MATCHED THEN UPDATE SET
      stat_table_1.START_DATE = stat_table_2.START_DATE,
      stat_table_1.END_DATE = stat_table_2.END_DATE,
      stat_table_1.STATUS = stat_table_2.STATUS
    WHEN NOT MATCHED THEN INSERT VALUES
      (stat_table_2.WORK_PERIOD_ID, stat_table_2.USER_ID, stat_table_2.PROJECT_ID,
      stat_table_2.START_DATE, stat_table_2.END_DATE, stat_table_2.STATUS)';

    FORALL i IN objects_array.FIRST..objects_array.LAST
    EXECUTE IMMEDIATE sql_work_period_stat USING objects_array(i);

END;

--DECLARE
--	objects_array NUMBER_ARRAY;
--BEGIN
--  SELECT OBJECT_ID
--  BULK COLLECT INTO objects_array
--  FROM OBJECTS
--  WHERE OBJECT_TYPE_ID = 8;
--
--  insert_work_period_stat_proc(objects_array);
--END;

-----------------------------------------------------

create or replace PROCEDURE insert_vacation_stat_proc
(objects_array IN NUMBER_ARRAY)
IS
  sql_vacation_stat VARCHAR2(5000);
BEGIN

  sql_vacation_stat := 'MERGE INTO VACATION_STAT stat_table_1
USING (SELECT
  VACATION_ID.OBJECT_ID         AS VACATION_ID,
  USER_ID.OBJECT_ID             AS USER_ID,
  PM_ID.OBJECT_ID               AS PM_ID,
  LM_ID.OBJECT_ID               AS LM_ID,
  PROJECT_ID.OBJECT_ID          AS PROJECT_ID,
  START_DATE.DATE_VALUE         AS START_DATE,
  END_DATE.DATE_VALUE                AS END_DATE,
  PM_APPROVE_STATUS_VALUE.VALUE AS PM_APPROVE_STATUS,
  LM_APPROVE_STATUS_VALUE.VALUE AS LM_APPROVE_STATUS
FROM OBJECTS VACATION_ID, OBJECTS USER_ID, OBJECTS PM_ID, OBJECTS LM_ID,
  OBJECTS PROJECT_ID,
  ATTRIBUTES START_DATE, ATTRIBUTES END_DATE, ATTRIBUTES PM_APPROVE_STATUS,
  ATTRIBUTES LM_APPROVE_STATUS,
  OBJREFERENCE VACATION_USER_REF, OBJREFERENCE VACATION_PM_REF,
  OBJREFERENCE VACATION_LM_REF, OBJREFERENCE VACATION_PROJECT_REF,
  LISTVALUE PM_APPROVE_STATUS_VALUE, LISTVALUE LM_APPROVE_STATUS_VALUE
WHERE VACATION_ID.OBJECT_ID = :1 AND
    VACATION_USER_REF.ATTR_ID = 45 AND
    VACATION_USER_REF.OBJECT_ID = VACATION_ID.OBJECT_ID AND
    USER_ID.OBJECT_ID = VACATION_USER_REF.REFERENCE AND
    VACATION_PM_REF.ATTR_ID = 47 AND
    VACATION_PM_REF.OBJECT_ID = VACATION_ID.OBJECT_ID AND
    PM_ID.OBJECT_ID = VACATION_PM_REF.REFERENCE AND
    VACATION_LM_REF.ATTR_ID = 48 AND
    VACATION_LM_REF.OBJECT_ID = VACATION_ID.OBJECT_ID AND
    LM_ID.OBJECT_ID = VACATION_LM_REF.REFERENCE AND
    VACATION_PROJECT_REF.ATTR_ID = 46 AND
    VACATION_PROJECT_REF.OBJECT_ID = VACATION_ID.OBJECT_ID AND
    PROJECT_ID.OBJECT_ID = VACATION_PROJECT_REF.REFERENCE AND
    START_DATE.ATTR_ID = 41 AND
    START_DATE.OBJECT_ID = VACATION_ID.OBJECT_ID AND
    END_DATE.ATTR_ID = 42 AND
    END_DATE.OBJECT_ID = VACATION_ID.OBJECT_ID AND
    PM_APPROVE_STATUS.ATTR_ID = 43 AND
    PM_APPROVE_STATUS.OBJECT_ID = VACATION_ID.OBJECT_ID AND
    PM_APPROVE_STATUS_VALUE.ATTR_ID = PM_APPROVE_STATUS.ATTR_ID AND
    PM_APPROVE_STATUS_VALUE.LIST_VALUE_ID = PM_APPROVE_STATUS.LIST_VALUE_ID AND
    LM_APPROVE_STATUS.ATTR_ID = 44 AND
    LM_APPROVE_STATUS.OBJECT_ID = VACATION_ID.OBJECT_ID AND
    LM_APPROVE_STATUS_VALUE.ATTR_ID = LM_APPROVE_STATUS.ATTR_ID AND
    LM_APPROVE_STATUS_VALUE.LIST_VALUE_ID = LM_APPROVE_STATUS.LIST_VALUE_ID) stat_table_2
    ON (stat_table_1.VACATION_ID = stat_table_2.VACATION_ID AND
      stat_table_1.USER_ID = stat_table_2.USER_ID AND
      stat_table_1.PM_ID = stat_table_2.PM_ID AND
      stat_table_1.LM_ID = stat_table_2.LM_ID AND
      stat_table_1.PROJECT_ID = stat_table_2.PROJECT_ID)
    WHEN MATCHED THEN UPDATE SET
      stat_table_1.START_DATE = stat_table_2.START_DATE,
      stat_table_1.END_DATE = stat_table_2.END_DATE,
      stat_table_1.PM_APPROVE_STATUS = stat_table_2.PM_APPROVE_STATUS,
      stat_table_1.LM_APPROVE_STATUS = stat_table_2.LM_APPROVE_STATUS
    WHEN NOT MATCHED THEN INSERT VALUES
      (stat_table_2.VACATION_ID, stat_table_2.USER_ID, stat_table_2.PM_ID,
      stat_table_2.LM_ID, stat_table_2.PROJECT_ID, stat_table_2.START_DATE,
      stat_table_2.END_DATE, stat_table_2.PM_APPROVE_STATUS, stat_table_2.LM_APPROVE_STATUS)';

  FORALL i IN objects_array.FIRST..objects_array.LAST
  EXECUTE IMMEDIATE sql_vacation_stat USING objects_array(i);
END;

--DECLARE
--	objects_array NUMBER_ARRAY;
--BEGIN
--  SELECT OBJECT_ID
--  BULK COLLECT INTO objects_array
--  FROM OBJECTS
--  WHERE OBJECT_TYPE_ID = 5;
--
--  insert_vacation_stat_proc(objects_array);
--END;

----------------------------------------------------------------
create or replace PROCEDURE insert_sprint_into_sprint_stat
(objects_array IN NUMBER_ARRAY)
IS
sql_project_sprint_stat VARCHAR2(5000);
BEGIN
  sql_project_sprint_stat := 'MERGE INTO PROJECT_SPRINT_STAT stat_table_1
USING (
SELECT
          PROJECT_ID.OBJECT_ID   AS PROJECT_ID,
          SPRINT_ID.OBJECT_ID    AS SPRINT_ID,
          SPRINT_NAME.VALUE      AS SPRINT_NAME,
          START_DATE.DATE_VALUE       AS START_DATE,
          END_DATE.DATE_VALUE         AS END_DATE,
          PLANNED_END_DATE.DATE_VALUE AS PLANNED_END_DATE
        FROM OBJECTS PROJECT_ID, OBJECTS SPRINT_ID,
          ATTRIBUTES SPRINT_NAME, ATTRIBUTES START_DATE, ATTRIBUTES END_DATE,
          ATTRIBUTES PLANNED_END_DATE,
          OBJREFERENCE PROJECT_SPRINT_REF
        WHERE
              SPRINT_ID.OBJECT_ID = :1 AND
              PROJECT_SPRINT_REF.ATTR_ID = 60 AND
              PROJECT_SPRINT_REF.REFERENCE = PROJECT_ID.OBJECT_ID AND
              PROJECT_SPRINT_REF.OBJECT_ID = SPRINT_ID.OBJECT_ID AND
              SPRINT_NAME.ATTR_ID = 55 AND
              SPRINT_NAME.OBJECT_ID = SPRINT_ID.OBJECT_ID AND
              START_DATE.ATTR_ID = 56 AND
              START_DATE.OBJECT_ID = SPRINT_ID.OBJECT_ID AND
              END_DATE.ATTR_ID = 57 AND
              END_DATE.OBJECT_ID = SPRINT_ID.OBJECT_ID AND
              PLANNED_END_DATE.ATTR_ID = 58 AND
              PLANNED_END_DATE.OBJECT_ID = SPRINT_ID.OBJECT_ID
      ) stat_table_2
ON (stat_table_1.PROJECT_ID = stat_table_2.PROJECT_ID AND
    stat_table_1.SPRINT_ID = stat_table_2.SPRINT_ID)
WHEN MATCHED THEN UPDATE SET
  stat_table_1.SPRINT_NAME             = stat_table_2.SPRINT_NAME,
  stat_table_1.SPRINT_START_DATE       = stat_table_2.START_DATE,
  stat_table_1.SPRINT_END_DATE         = stat_table_2.END_DATE,
  stat_table_1.SPRINT_PLANNED_END_DATE = stat_table_2.PLANNED_END_DATE
WHEN NOT MATCHED THEN INSERT VALUES
  (stat_table_2.PROJECT_ID, stat_table_2.SPRINT_ID, stat_table_2.SPRINT_NAME,
   stat_table_2.START_DATE, stat_table_2.END_DATE,
   stat_table_2.PLANNED_END_DATE)';
   
  FORALL i IN objects_array.FIRST..objects_array.LAST
  EXECUTE IMMEDIATE sql_project_sprint_stat USING objects_array(i);
  
END;


--DECLARE
--objects_array NUMBER_ARRAY;
--BEGIN
--  SELECT OBJECT_ID
--  BULK COLLECT INTO objects_array
--  FROM OBJECTS
--  WHERE OBJECT_TYPE_ID = 7;
--  
--  insert_sprint_into_sprint_stat(objects_array);
--END;